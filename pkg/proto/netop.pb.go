// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: netop.proto

package netops

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TcType represents Traffic Control Type.
type TcType int32

const (
	TcType_BANDWIDTH_CONTROL TcType = 0
)

// Enum value maps for TcType.
var (
	TcType_name = map[int32]string{
		0: "BANDWIDTH_CONTROL",
	}
	TcType_value = map[string]int32{
		"BANDWIDTH_CONTROL": 0,
	}
)

func (x TcType) Enum() *TcType {
	p := new(TcType)
	*p = x
	return p
}

func (x TcType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TcType) Descriptor() protoreflect.EnumDescriptor {
	return file_netop_proto_enumTypes[0].Descriptor()
}

func (TcType) Type() protoreflect.EnumType {
	return &file_netop_proto_enumTypes[0]
}

func (x TcType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TcType.Descriptor instead.
func (TcType) EnumDescriptor() ([]byte, []int) {
	return file_netop_proto_rawDescGZIP(), []int{0}
}

type ClassType int32

const (
	ClassType_HTB ClassType = 0
	ClassType_TBF ClassType = 1
)

// Enum value maps for ClassType.
var (
	ClassType_name = map[int32]string{
		0: "HTB",
		1: "TBF",
	}
	ClassType_value = map[string]int32{
		"HTB": 0,
		"TBF": 1,
	}
)

func (x ClassType) Enum() *ClassType {
	p := new(ClassType)
	*p = x
	return p
}

func (x ClassType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClassType) Descriptor() protoreflect.EnumDescriptor {
	return file_netop_proto_enumTypes[1].Descriptor()
}

func (ClassType) Type() protoreflect.EnumType {
	return &file_netop_proto_enumTypes[1]
}

func (x ClassType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClassType.Descriptor instead.
func (ClassType) EnumDescriptor() ([]byte, []int) {
	return file_netop_proto_rawDescGZIP(), []int{1}
}

// Generic event types enum
type EventType int32

const (
	EventType_EV_CREATE EventType = 0
	EventType_EV_UPDATE EventType = 1
	EventType_EV_DELETE EventType = 2
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0: "EV_CREATE",
		1: "EV_UPDATE",
		2: "EV_DELETE",
	}
	EventType_value = map[string]int32{
		"EV_CREATE": 0,
		"EV_UPDATE": 1,
		"EV_DELETE": 2,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_netop_proto_enumTypes[2].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_netop_proto_enumTypes[2]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_netop_proto_rawDescGZIP(), []int{2}
}

// Response represents the netops response format.
type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusMsg string `protobuf:"bytes,1,opt,name=statusMsg,proto3" json:"statusMsg,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netop_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_netop_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_netop_proto_rawDescGZIP(), []int{0}
}

func (x *Response) GetStatusMsg() string {
	if x != nil {
		return x.StatusMsg
	}
	return ""
}

// Slice QoS Profile
type SliceQosProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the slice
	SliceName string `protobuf:"bytes,1,opt,name=sliceName,proto3" json:"sliceName,omitempty"`
	// Slice Identifier //TODO
	SliceId string `protobuf:"bytes,2,opt,name=sliceId,proto3" json:"sliceId,omitempty"`
	// Name of the QoS profile attached to the slice
	QosProfileName string `protobuf:"bytes,3,opt,name=qosProfileName,proto3" json:"qosProfileName,omitempty"`
	// TC type -  Bandwidth control
	TcType TcType `protobuf:"varint,4,opt,name=tcType,proto3,enum=netops.TcType" json:"tcType,omitempty"`
	// ClassType - HTB   ( HTB)
	ClassType ClassType `protobuf:"varint,5,opt,name=ClassType,proto3,enum=netops.ClassType" json:"ClassType,omitempty"`
	// Bandwidth Ceiling in Mbps  - 5 Mbps (100k - 100 Mbps)
	BwCeiling uint32 `protobuf:"varint,6,opt,name=bwCeiling,proto3" json:"bwCeiling,omitempty"`
	// Bandwidth Guaranteed -  1 Mbps ( 100k- 100 Mbps)
	BwGuaranteed uint32 `protobuf:"varint,7,opt,name=bwGuaranteed,proto3" json:"bwGuaranteed,omitempty"`
	// Priority - 2 (Number 0-3)
	Priority uint32 `protobuf:"varint,8,opt,name=priority,proto3" json:"priority,omitempty"`
	// Dscp class to mark inter cluster traffic
	DscpClass string `protobuf:"bytes,9,opt,name=dscpClass,proto3" json:"dscpClass,omitempty"`
}

func (x *SliceQosProfile) Reset() {
	*x = SliceQosProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netop_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SliceQosProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SliceQosProfile) ProtoMessage() {}

func (x *SliceQosProfile) ProtoReflect() protoreflect.Message {
	mi := &file_netop_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SliceQosProfile.ProtoReflect.Descriptor instead.
func (*SliceQosProfile) Descriptor() ([]byte, []int) {
	return file_netop_proto_rawDescGZIP(), []int{1}
}

func (x *SliceQosProfile) GetSliceName() string {
	if x != nil {
		return x.SliceName
	}
	return ""
}

func (x *SliceQosProfile) GetSliceId() string {
	if x != nil {
		return x.SliceId
	}
	return ""
}

func (x *SliceQosProfile) GetQosProfileName() string {
	if x != nil {
		return x.QosProfileName
	}
	return ""
}

func (x *SliceQosProfile) GetTcType() TcType {
	if x != nil {
		return x.TcType
	}
	return TcType_BANDWIDTH_CONTROL
}

func (x *SliceQosProfile) GetClassType() ClassType {
	if x != nil {
		return x.ClassType
	}
	return ClassType_HTB
}

func (x *SliceQosProfile) GetBwCeiling() uint32 {
	if x != nil {
		return x.BwCeiling
	}
	return 0
}

func (x *SliceQosProfile) GetBwGuaranteed() uint32 {
	if x != nil {
		return x.BwGuaranteed
	}
	return 0
}

func (x *SliceQosProfile) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *SliceQosProfile) GetDscpClass() string {
	if x != nil {
		return x.DscpClass
	}
	return ""
}

// Slice event message
type SliceLifeCycleEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the slice
	SliceName string `protobuf:"bytes,1,opt,name=sliceName,proto3" json:"sliceName,omitempty"`
	// Event type
	Event EventType `protobuf:"varint,2,opt,name=event,proto3,enum=netops.EventType" json:"event,omitempty"`
}

func (x *SliceLifeCycleEvent) Reset() {
	*x = SliceLifeCycleEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netop_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SliceLifeCycleEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SliceLifeCycleEvent) ProtoMessage() {}

func (x *SliceLifeCycleEvent) ProtoReflect() protoreflect.Message {
	mi := &file_netop_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SliceLifeCycleEvent.ProtoReflect.Descriptor instead.
func (*SliceLifeCycleEvent) Descriptor() ([]byte, []int) {
	return file_netop_proto_rawDescGZIP(), []int{2}
}

func (x *SliceLifeCycleEvent) GetSliceName() string {
	if x != nil {
		return x.SliceName
	}
	return ""
}

func (x *SliceLifeCycleEvent) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_EV_CREATE
}

var File_netop_proto protoreflect.FileDescriptor

var file_netop_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x6f, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x6e,
	0x65, 0x74, 0x6f, 0x70, 0x73, 0x22, 0x28, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73, 0x67, 0x22,
	0xc6, 0x02, 0x0a, 0x0f, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x51, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x71,
	0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x74, 0x63, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x6e, 0x65, 0x74, 0x6f, 0x70, 0x73, 0x2e, 0x54, 0x63, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x06, 0x74, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2f, 0x0a, 0x09, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11,
	0x2e, 0x6e, 0x65, 0x74, 0x6f, 0x70, 0x73, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x09, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x62, 0x77, 0x43, 0x65, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x62, 0x77, 0x43, 0x65, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x77,
	0x47, 0x75, 0x61, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x62, 0x77, 0x47, 0x75, 0x61, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x73,
	0x63, 0x70, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64,
	0x73, 0x63, 0x70, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x22, 0x5c, 0x0a, 0x13, 0x53, 0x6c, 0x69, 0x63,
	0x65, 0x4c, 0x69, 0x66, 0x65, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6e,
	0x65, 0x74, 0x6f, 0x70, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2a, 0x1f, 0x0a, 0x06, 0x54, 0x63, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x15, 0x0a, 0x11, 0x42, 0x41, 0x4e, 0x44, 0x57, 0x49, 0x44, 0x54, 0x48, 0x5f, 0x43, 0x4f,
	0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x10, 0x00, 0x2a, 0x1d, 0x0a, 0x09, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x48, 0x54, 0x42, 0x10, 0x00, 0x12, 0x07, 0x0a,
	0x03, 0x54, 0x42, 0x46, 0x10, 0x01, 0x2a, 0x38, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x56, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45,
	0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x56, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x56, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x02,
	0x32, 0xa3, 0x01, 0x0a, 0x0d, 0x4e, 0x65, 0x74, 0x4f, 0x70, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x44, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x69, 0x63,
	0x65, 0x51, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x17, 0x2e, 0x6e, 0x65,
	0x74, 0x6f, 0x70, 0x73, 0x2e, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x51, 0x6f, 0x73, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x1a, 0x10, 0x2e, 0x6e, 0x65, 0x74, 0x6f, 0x70, 0x73, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x66, 0x65, 0x43, 0x79, 0x63, 0x6c, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x2e, 0x6e, 0x65, 0x74, 0x6f, 0x70, 0x73, 0x2e, 0x53,
	0x6c, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x66, 0x65, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x1a, 0x10, 0x2e, 0x6e, 0x65, 0x74, 0x6f, 0x70, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2f, 0x3b, 0x6e, 0x65, 0x74,
	0x6f, 0x70, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_netop_proto_rawDescOnce sync.Once
	file_netop_proto_rawDescData = file_netop_proto_rawDesc
)

func file_netop_proto_rawDescGZIP() []byte {
	file_netop_proto_rawDescOnce.Do(func() {
		file_netop_proto_rawDescData = protoimpl.X.CompressGZIP(file_netop_proto_rawDescData)
	})
	return file_netop_proto_rawDescData
}

var file_netop_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_netop_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_netop_proto_goTypes = []interface{}{
	(TcType)(0),                 // 0: netops.TcType
	(ClassType)(0),              // 1: netops.ClassType
	(EventType)(0),              // 2: netops.EventType
	(*Response)(nil),            // 3: netops.Response
	(*SliceQosProfile)(nil),     // 4: netops.SliceQosProfile
	(*SliceLifeCycleEvent)(nil), // 5: netops.SliceLifeCycleEvent
}
var file_netop_proto_depIdxs = []int32{
	0, // 0: netops.SliceQosProfile.tcType:type_name -> netops.TcType
	1, // 1: netops.SliceQosProfile.ClassType:type_name -> netops.ClassType
	2, // 2: netops.SliceLifeCycleEvent.event:type_name -> netops.EventType
	4, // 3: netops.NetOpsService.UpdateSliceQosProfile:input_type -> netops.SliceQosProfile
	5, // 4: netops.NetOpsService.UpdateSliceLifeCycleEvent:input_type -> netops.SliceLifeCycleEvent
	3, // 5: netops.NetOpsService.UpdateSliceQosProfile:output_type -> netops.Response
	3, // 6: netops.NetOpsService.UpdateSliceLifeCycleEvent:output_type -> netops.Response
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_netop_proto_init() }
func file_netop_proto_init() {
	if File_netop_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_netop_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netop_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SliceQosProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netop_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SliceLifeCycleEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_netop_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_netop_proto_goTypes,
		DependencyIndexes: file_netop_proto_depIdxs,
		EnumInfos:         file_netop_proto_enumTypes,
		MessageInfos:      file_netop_proto_msgTypes,
	}.Build()
	File_netop_proto = out.File
	file_netop_proto_rawDesc = nil
	file_netop_proto_goTypes = nil
	file_netop_proto_depIdxs = nil
}
